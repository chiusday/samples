{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/user/user.component.css","webpack:///./src/app/components/user/user.component.html","webpack:///./src/app/components/user/user.component.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-user></app-user>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginService} from './services/login.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [LoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-primary mb-4\\\">\\n  <a href=\\\"#\\\" class=\\\"navbar-brand\\\">Login</a>\\n</nav>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card card-body mb-3\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>ID:</label>&nbsp;<span class=\\\"badge badge-secondary\\\">{{ user.id }}</span> \\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Name:</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.name\\\" (ngModelChange)=\\\"validate()\\\"\\n          class=\\\"form-control\\\" name=\\\"userName\\\"/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Password:</label>\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"user.password\\\" (ngModelChange)=\\\"validate()\\\" \\n          class=\\\"form-control\\\" name=\\\"userPassword\\\"/>\\n      </div>\\n      <button type=\\\"submit\\\" [disabled]=\\\"!validated\\\"\\n        class=\\\"btn btn-dark mb-3\\\">Login</button>\\n      <span class=\\\"label label-success\\\">{{ loginResult }}</span>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../../interfaces/user';\nimport { LoginService } from '../../services/login.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  user: User;\n  loginResult: string;\n  validated: boolean = false;\n\n  constructor(private loginService: LoginService) { }\n\n  ngOnInit() {\n    this.user = {\n      id: '',\n      name: '',\n      password: ''\n    };\n\n    this.loginResult = '';\n  }\n\n  validate(){\n    if (this.user.name=='' || this.user.password==''){\n      this.validated = false;\n    } else {\n      this.validated = true;\n    }\n  }\n\n  onSubmit(){\n    this.user.id=='';\n    console.log(`submitted: ${this.user.id} ${this.user.name} ${this.user.password}`);\n\n    this.loginService.login(this.user).subscribe(\n      user => {\n        if (user.id == '0'){\n          alert(`User ${this.user.name} not found.`)\n        } else {\n          alert(`User ID ${user.id} loaded successfuly.`)\n        }\n        this.user = user;\n        console.log(`API call done: ${this.user.id} ${this.user.name} ${this.user.password}`);\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { User } from '../interfaces/user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ \n    'Content-Type':'application/json',\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  loginUrl: string = 'http://localhost:60011/samples/login';\n\n  constructor(private httpClient: HttpClient) { }\n\n  login(user: User): Observable<User> {\n    return this.httpClient.post<User>(this.loginUrl, user, httpOptions);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}